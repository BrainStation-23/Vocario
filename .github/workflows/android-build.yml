name: Build Android APK and AAB

on:
  workflow_dispatch:
    inputs:
      build_type:
        description: 'Build type (debug or release)'
        required: true
        default: 'release'
        type: choice
        options:
          - debug
          - release
      build_format:
        description: 'Build format'
        required: true
        default: 'both'
        type: choice
        options:
          - apk
          - aab
          - both

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Java
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'
        
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.6'
        channel: 'stable'
        cache: true
        
    - name: Create keystore file
      run: |
        echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 --decode > android/@tanim2025__vocario-keystore.bak.jks
        
    - name: Create credentials file
      run: |
        echo "storePassword:${{ secrets.KEYSTORE_PASSWORD }}" > android/credentials.txt
        echo "keyPassword:${{ secrets.KEY_PASSWORD }}" >> android/credentials.txt
        echo "keyAlias:${{ secrets.KEY_ALIAS }}" >> android/credentials.txt
        echo "storeFile:@tanim2025__vocario-keystore.bak.jks" >> android/credentials.txt
        
    - name: Create Firebase config files
      run: |
        # Create google-services.json from secrets
        echo "${{ secrets.GOOGLE_SERVICES_JSON }}" > android/app/src/google-services.json
        
    - name: Get dependencies
      run: flutter pub get
      
    # - name: Run tests
      # run: flutter test
      
    - name: Build APK (Debug)
      if: ${{ github.event.inputs.build_type == 'debug' && (github.event.inputs.build_format == 'apk' || github.event.inputs.build_format == 'both') }}
      run: flutter build apk --debug
      
    - name: Build APK (Release)
      if: ${{ github.event.inputs.build_type == 'release' && (github.event.inputs.build_format == 'apk' || github.event.inputs.build_format == 'both') }}
      run: flutter build apk --release
      
    - name: Build AAB (Debug)
      if: ${{ github.event.inputs.build_type == 'debug' && (github.event.inputs.build_format == 'aab' || github.event.inputs.build_format == 'both') }}
      run: flutter build appbundle --debug
      
    - name: Build AAB (Release)
      if: ${{ github.event.inputs.build_type == 'release' && (github.event.inputs.build_format == 'aab' || github.event.inputs.build_format == 'both') }}
      run: flutter build appbundle --release
      
    - name: Upload APK artifacts
      if: ${{ github.event.inputs.build_format == 'apk' || github.event.inputs.build_format == 'both' }}
      uses: actions/upload-artifact@v4
      with:
        name: android-apk-${{ github.event.inputs.build_type }}
        path: |
          build/app/outputs/flutter-apk/*.apk
          build/app/outputs/apk/**/*.apk
        retention-days: 30
        
    - name: Upload AAB artifacts
      if: ${{ github.event.inputs.build_format == 'aab' || github.event.inputs.build_format == 'both' }}
      uses: actions/upload-artifact@v4
      with:
        name: android-aab-${{ github.event.inputs.build_type }}
        path: |
          build/app/outputs/bundle/**/*.aab
        retention-days: 30
        
    - name: Clean up sensitive files
      if: always()
      run: |
        rm -f android/@tanim2025__vocario-keystore.bak.jks
        rm -f android/credentials.txt
        rm -f android/app/src/google-services.json